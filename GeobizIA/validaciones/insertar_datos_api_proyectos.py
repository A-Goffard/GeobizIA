#!/usr/bin/env python3
"""
Script para insertar datos de prueba en la base de datos de proyectos
usando la API (para aprovechar la generaci√≥n autom√°tica de IDs).
"""

import requests
import json
import sys

# Configuraci√≥n de la API
API_BASE_URL = "http://localhost:8000"
API_PROYECTOS_URL = f"{API_BASE_URL}/api/proyectos"

def insertar_datos_via_api():
    """Inserta datos de prueba usando la API"""
    print("üîÑ Insertando datos de prueba usando la API...")
    
    # Datos de prueba
    proyectos_prueba = [
        {
            "nombre": "Proyecto Sostenibilidad Urbana",
            "descripcion": "Proyecto para implementar soluciones sostenibles en entornos urbanos, incluyendo gesti√≥n de residuos y energ√≠as renovables.",
            "fecha_inicio": "2024-01-15",
            "fecha_fin": "2024-12-15",
            "poblacion": "Madrid, Espa√±a",
            "responsable": "Mar√≠a Garc√≠a L√≥pez",
            "estado": "EN_PROGRESO",
            "objetivos": "Reducir la huella de carbono en un 30% y mejorar la calidad del aire en zonas urbanas.",
            "presupuesto": 150000.00
        },
        {
            "nombre": "Educaci√≥n Ambiental Comunitaria",
            "descripcion": "Programa de educaci√≥n ambiental dirigido a comunidades locales para promover pr√°cticas sostenibles.",
            "fecha_inicio": "2024-03-01",
            "fecha_fin": "2024-08-31",
            "poblacion": "Barcelona, Espa√±a",
            "responsable": "Juan Carlos Ruiz",
            "estado": "PLANIFICACION",
            "objetivos": "Capacitar a 500 personas en pr√°cticas ambientales sostenibles y crear 10 grupos de acci√≥n comunitaria.",
            "presupuesto": 75000.50
        },
        {
            "nombre": "Restauraci√≥n Forestal",
            "descripcion": "Proyecto de reforestaci√≥n y restauraci√≥n de ecosistemas forestales degradados en zonas rurales.",
            "fecha_inicio": "2024-02-01",
            "fecha_fin": "2025-01-31",
            "poblacion": "Asturias, Espa√±a",
            "responsable": "Ana Mart√≠nez Torres",
            "estado": "EN_PROGRESO",
            "objetivos": "Restaurar 200 hect√°reas de bosque y plantar 50,000 √°rboles nativos.",
            "presupuesto": 300000.75
        },
        {
            "nombre": "Gesti√≥n Integral de Residuos",
            "descripcion": "Implementaci√≥n de un sistema integral de gesti√≥n de residuos con enfoque en econom√≠a circular.",
            "fecha_inicio": "2024-01-01",
            "fecha_fin": "2024-06-30",
            "poblacion": "Valencia, Espa√±a",
            "responsable": "Pedro S√°nchez G√≥mez",
            "estado": "COMPLETADO",
            "objetivos": "Reducir los residuos urbanos en un 40% y aumentar el reciclaje al 85%.",
            "presupuesto": 120000.25
        },
        {
            "nombre": "Energ√≠a Solar Comunitaria",
            "descripcion": "Instalaci√≥n de paneles solares comunitarios para promover el uso de energ√≠as renovables.",
            "fecha_inicio": "2024-05-01",
            "fecha_fin": "2024-11-30",
            "poblacion": "Sevilla, Espa√±a",
            "responsable": "Laura Fern√°ndez D√≠az",
            "estado": "PLANIFICACION",
            "objetivos": "Instalar 100 kW de capacidad solar y reducir el consumo el√©ctrico convencional en un 50%.",
            "presupuesto": 200000.00
        }
    ]
    
    # Verificar si el servidor est√° funcionando
    try:
        response = requests.get(f"{API_BASE_URL}/docs")
        if response.status_code != 200:
            print("‚ùå El servidor no est√° funcionando. Inicia el servidor primero.")
            return False
    except Exception as e:
        print(f"‚ùå No se puede conectar al servidor: {e}")
        print("üí° Aseg√∫rate de que el servidor est√© funcionando en http://localhost:8000")
        return False
    
    # Insertar cada proyecto
    proyectos_insertados = 0
    for datos in proyectos_prueba:
        try:
            response = requests.post(API_PROYECTOS_URL, json=datos)
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ Proyecto '{datos['nombre']}' insertado correctamente (ID: {result.get('id_proyecto', 'N/A')})")
                proyectos_insertados += 1
            else:
                print(f"‚ùå Error al insertar proyecto '{datos['nombre']}': {response.status_code} - {response.text}")
                
        except Exception as e:
            print(f"‚ùå Error al procesar proyecto '{datos['nombre']}': {e}")
    
    print(f"\nüìä Resultado: {proyectos_insertados} proyectos insertados correctamente")
    return proyectos_insertados > 0

def verificar_datos():
    """Verifica que los datos se insertaron correctamente"""
    print("\nüîç Verificando datos insertados...")
    
    try:
        response = requests.get(API_PROYECTOS_URL)
        if response.status_code == 200:
            proyectos = response.json()
            print(f"‚úÖ Se encontraron {len(proyectos)} proyectos en la base de datos:")
            
            for proyecto in proyectos:
                print(f"  - {proyecto.get('nombre', 'Sin nombre')} ({proyecto.get('estado', 'Sin estado')})")
                
            return True
        else:
            print(f"‚ùå Error al obtener proyectos: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error al verificar datos: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Configurando datos de prueba para proyectos")
    print("=" * 50)
    
    # Insertar datos de prueba
    if insertar_datos_via_api():
        print("\n‚úÖ Datos de prueba insertados exitosamente")
    else:
        print("\n‚ùå Hubo errores al insertar datos de prueba")
        return False
    
    # Verificar datos
    if verificar_datos():
        print("\n‚úÖ Verificaci√≥n completada exitosamente")
    else:
        print("\n‚ùå Error en la verificaci√≥n")
        return False
    
    print("\nüéâ Configuraci√≥n completada!")
    print("\nAhora puedes:")
    print("1. Acceder a la API: http://localhost:8000/api/proyectos")
    print("2. Ver la documentaci√≥n: http://localhost:8000/docs")
    print("3. Usar el frontend para ver los proyectos creados")
    print("4. Crear m√°s proyectos desde el formulario web")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
